plugins {
  id 'findbugs'
  id 'pmd'
  id 'jdepend'
  id "com.github.johnrengelman.shadow" version "1.2.4"
  id 'net.saliman.cobertura' version '2.3.1'
  id 'com.github.kt3k.coveralls' version '2.7.1'
  id 'com.github.ben-manes.versions' version '0.13.0'
}

version = '1.2.3'
group = 'lt.nkts'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
  jcenter()
}

configurations {
  provided
}

sourceSets {
  main {
    compileClasspath += configurations.provided
  }
}
project.ext.cassversion = '3.11.0'

dependencies {
  provided "org.apache.cassandra:cassandra-all:${cassversion}"
  compile('com.ecwid.consul:consul-api:1.1.9') {
    exclude group: 'commons-codec'
  }
  provided 'commons-codec:commons-codec:1.2'
  provided 'org.apache.commons:commons-collections4:4.0'
  provided 'org.kie.modules:org-apache-commons-lang3:6.5.0.Final'
  provided 'com.google.guava:guava:19.0'
}

shadowJar {
  mergeServiceFiles()
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.RSA'
}

task exportDeps(type: Copy) {
  into "build/libs"
  from configurations.compile
}

jar.dependsOn(exportDeps)

configurations {
  runtime.exclude module: 'logback-core'
  runtime.exclude module: 'logback-classic'
  runtime.exclude module: 'slf4j-api'
  runtime.exclude module: 'log4j-over-slf4j'
  runtime.exclude module: 'jcl-over-slf4j'
}

cobertura.coverageFormats = ['html', 'xml']

task wrapper(type: Wrapper) {
  gradleVersion = '3.2'
}

findbugsMain {
  ignoreFailures = true
  effort = "max"
  reports {
    xml.enabled = true
    html.enabled = false
  }
}

pmd {
  ignoreFailures = true
}

tasks.coveralls {
  dependsOn 'check', 'cobertura'
}
